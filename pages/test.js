import axios from 'axios';
import Head from 'next/head'
import { useEffect } from 'react';
import Toolkit from "../lib/core/views"
import styles from '../styles/Home.module.css'
import { setupCache } from 'axios-cache-adapter'
const cache = setupCache({
  maxAge: 15 * 60 * 1000
})

const api = axios.create({
  adapter: cache.adapter
})

const labels = [
  'January',
  'February',
  'March',
  'April',
  'May',
  'June',
];

const data = {
  labels: labels,
  datasets: [{
    label: 'My First dataset',
    backgroundColor: 'rgb(255, 99, 132)',
    borderColor: 'rgb(255, 99, 132)',
    data: [100, 10, 5, 2, 20, 30, 45],
  }]
};

const config = {
  type: 'line',
  data: data,
  options: {responsive: false}
};

let _kit = null;
const initialize = () => {
  const kit = new Toolkit(window.document.getElementById('main-view'))
  const code = async function() {
    kit.text("## Calculate your taxes!");
    const file = kit.fileInput("Upload your Image", {as: 'image'});
    if (file) {
      kit.image(file, {width: 100, height: 'auto'});
    }
    const formattedData = kit.dataTable(
      [
        { field: "make", editable: true },
        { field: "model", editable: true },
        { field: "price", editable: true },
      ],
      [
        { make: "Toyota", model: "Celica", price: 35000 },
        { make: "Ford", model: "Mondeo", price: 32000 },
        { make: "Porsche", model: "Boxster", price: 72000 }
      ],
    );
    kit.html(`This is custom HTML <a href="https://google.com">Click here to go to google</a>`)
    kit.text("Responding to: " + formattedData[0].make);
    kit.iframe("https://www.youtube.com/embed/dXBohfjc4WA")
    const date = kit.dateInput("What is the current time?")
    kit.text(`Current Date: ${date}`);
    const time = kit.timeInput("What is the current time?")
    kit.text(`Current Time: ${time}`);
    const selectedValue = kit.select("Favorite food", ["Hamburger", "Graffiti"], {defaultValue: "Graffiti"});
    kit.text(`Selected: ${selectedValue ? selectedValue : ""}`);
    const country = kit.radio("Where do you live?", ["Canada", "United States"]);
    kit.text(`Your Country: ${country ? country : ""}`);
    if (kit.button("Click here to show stuff")) {
      kit.text("Hello world!");
    }
    const value = kit.input(
      "Your annual income",
      {
        defaultValue: 0,
        placeholder: "Ex: 10000",
        type: "number",
      }
    );
    const taxRate = kit.slider(
      "Your Tax Rate",
      {
        defaultValue: 0,
        min: 0,
        max: 100,
        type: "number",
      });
    kit.chart(config, {height: '400', width: '400'});
    const dataURL = kit.canvas((ctx) => {
      ctx.beginPath();
      ctx.moveTo(0, 0);
      ctx.lineTo(taxRate, taxRate);
      ctx.stroke();
    }, {height: 300, width: 300});
    const colorSelected = kit.colorPicker("Pick a color!");
    const webcam = kit.webcam();
    if (webcam) {
      kit.image(webcam);
    }
    kit.text("Color selected " + colorSelected);
    kit.downloadButton("Download", "image.png", dataURL);
    if (value && taxRate) {
      kit.text(`## Your tax is: $${value * taxRate / 100}!`);
    }
    const response = await api.get("https://www.mockachino.com/e065c9e2-cd3f-4a/users");
    kit.text(`Data: ${JSON.stringify(response.data)}`);
    const checked = kit.checkbox("I don't want to pay taxes")
    kit.text(`You are checked: **${checked}**`);
    const clicked = kit.button("Submit");
    if (clicked) {
      kit.text('Submitted! ');
    }
    kit.code(`
      var a = 1;
      var b = 2;
      console.log(a + b);
      ${checked && 'console.log(a, b);'}
    `, {language: 'javascript'})
    kit.image("https://i.imgur.com/CAcnA3e.jpeg", {width: '100', height: '100'});
    kit.video("/examples/video.mp4", {width: '400', height: '300'});
    kit.audio("http://ringelkater.de/Sounds/2geraeusche_tiere/dino_tyrannosaurus1.wav");
    data.datasets[0].data[0] = parseInt(taxRate);
  }
  kit.start(code);
  _kit = kit;
}
export default function Home() {
  useEffect(() => {
    if (typeof window !== "undefined" && _kit === null) {
      initialize();
    }
  }, []);
  return (
    <div className={styles.container}>
      <Head>
        <title>Browser Script</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container">
        <div id="main-view">
        </div>
      </main>
      <footer>
      </footer>
    </div>
  )
}
